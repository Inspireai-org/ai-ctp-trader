{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes them for potential improvements including code smells, design patterns, and best practices. Provides suggestions for better readability, maintainability, and performance.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "**/*.rs",
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/*.jsx",
      "**/*.py",
      "**/*.java",
      "**/*.cpp",
      "**/*.c",
      "**/*.h",
      "**/*.hpp",
      "**/*.go",
      "**/*.php",
      "**/*.rb",
      "**/*.swift",
      "**/*.kt",
      "**/*.scala",
      "**/*.cs"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other anti-patterns\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for adherence to language-specific best practices and coding standards\n4. **Readability**: Suggest improvements for variable naming, code organization, and documentation\n5. **Maintainability**: Identify areas that could be refactored for easier maintenance and testing\n6. **Performance**: Spot potential performance bottlenecks and suggest optimizations\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code examples showing the problem\n- Recommended solution with example code\n- Rationale for why the change improves the code\n\nMaintain the existing functionality while suggesting improvements. Prioritize suggestions based on impact and ease of implementation."
  }
}